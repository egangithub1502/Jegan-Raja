name: Automerge if conditions are met

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  automerge:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Check PR conditions
        id: check_conditions
        uses: actions/github-script@v6
        with:
          script: |
            try {
              const pr = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number
              });

              const reviews = await github.rest.pulls.listReviews({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number
              });

              const isApproved = reviews.data.some(review => review.state === 'APPROVED');
              const isReviewed = reviews.data.length > 0;
              const assignedUsers = pr.data.assignees.map(a => a.login);
              const commonUser = 'egangithub1502';
              
              console.log(`PR ${context.issue.number} - Approved: ${isApproved}, Reviewed: ${isReviewed}, Assigned: ${assignedUsers}`);
              console.log('PR Details:', JSON.stringify(pr.data, null, 2));
              console.log('Reviews:', JSON.stringify(reviews.data, null, 2));

              const merge = isApproved && isReviewed && assignedUsers.includes(commonUser);
              console.log(`Should merge: ${merge}`);

              return { merge: merge.toString() };
            } catch (error) {
              console.error('Error in check_conditions:', error);
              return { merge: 'false' }; // Default to not merging in case of error
            }
          github-token: ${{ secrets.JEGANTOKEN }}

      - name: Debug Output
        run: |
          echo "Merge condition: ${{ steps.check_conditions.outputs.merge }}"

      - name: Merge PR
        if: steps.check_conditions.outputs.merge == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            try {
              const response = await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                commit_message: 'Automerge by GitHub Actions'
              });
              console.log('Merge response:', response);
            } catch (error) {
              console.error('Merge error:', error);
            }
          github-token: ${{ secrets.JEGANTOKEN }}  # Ensure correct indentation here
