name: Auto Merge profit_dep_hf to profit_dep_minor to master

on:
  push:
    branches:
      - 'profit_dep_hf_*'
      - 'profit_dep_minor_*'

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    env:
      JEGANTOKEN: ${{ secrets.JEGANTOKEN }}
      GH_TOKEN: ${{ secrets.JEGANTOKEN }}  # Add GitHub CLI token for authentication

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Git
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"

    - name: Set up GitHub CLI
      run: gh auth setup-git
      env:
        GH_TOKEN: ${{ secrets.JEGANTOKEN }}

    - name: Merge profit_dep_hf to profit_dep_minor
      if: startsWith(github.ref, 'refs/heads/profit_dep_hf_')
      run: |
        # Identify the correct minor branch
        MINOR_BRANCH=$(git branch -r | grep 'origin/profit_dep_minor_' | tail -n 1 | sed 's|origin/||' | xargs)
        if [ -z "$MINOR_BRANCH" ]; then
          echo "No minor branch found. Exiting."
          exit 1
        fi
        echo "Found minor branch: $MINOR_BRANCH"
        git checkout "$MINOR_BRANCH"
        git pull origin "$MINOR_BRANCH"
        git fetch origin
        git merge --no-ff "${GITHUB_REF#refs/heads/}" || {
          # Create temporary branch on conflict
          TEMP_BRANCH="temp/hf-to-minor-$(date +%s)"
          git checkout -b "$TEMP_BRANCH"
          git push origin "$TEMP_BRANCH"
          echo "::set-output name=CONFLICT::true"
        }
      id: merge_hf_to_minor

    - name: Create Pull Request for profit_dep_hf to profit_dep_minor
      if: steps.merge_hf_to_minor.outputs.CONFLICT == 'true'
      run: |
        gh pr create --base "$MINOR_BRANCH" --head "${GITHUB_REF#refs/heads/}" --title "Merge ${GITHUB_REF#refs/heads/} into $MINOR_BRANCH" --body "Automatic merge from ${GITHUB_REF#refs/heads/} into $MINOR_BRANCH"
      id: create_pr_hf_to_minor

    - name: Push merged changes to profit_dep_minor
      if: steps.merge_hf_to_minor.outputs.CONFLICT != 'true'
      run: |
        git checkout "$MINOR_BRANCH"
        git push origin "$MINOR_BRANCH"
      id: push_minor

    - name: Merge profit_dep_minor to master
      if: (startsWith(github.ref, 'refs/heads/profit_dep_hf_') && steps.merge_hf_to_minor.outputs.CONFLICT != 'true') || startsWith(github.ref, 'refs/heads/profit_dep_minor_')
      run: |
        git checkout master
        git pull origin master
        git fetch origin
        MINOR_BRANCH=$(git branch -r | grep 'origin/profit_dep_minor_' | tail -n 1 | sed 's|origin/||' | xargs)
        if [ -z "$MINOR_BRANCH" ]; then
          echo "No minor branch found. Exiting."
          exit 1
        fi
        echo "Found minor branch: $MINOR_BRANCH"
        git merge --no-ff "$MINOR_BRANCH" || {
          # Create temporary branch on conflict
          TEMP_BRANCH="temp/minor-to-master-$(date +%s)"
          git checkout -b "$TEMP_BRANCH"
          git push origin "$TEMP_BRANCH"
          echo "::set-output name=CONFLICT::true"
        }
      id: merge_minor_to_master

    - name: Create Pull Request for profit_dep_minor to master
      if: steps.merge_minor_to_master.outputs.CONFLICT == 'true'
      run: |
        gh pr create --base master --head "$MINOR_BRANCH" --title "Merge $MINOR_BRANCH into master" --body "Automatic merge from $MINOR_BRANCH into master"
      id: create_pr_minor_to_master

    - name: Push merged changes to master
      if: steps.merge_minor_to_master.outputs.CONFLICT != 'true'
      run: |
        git checkout master
        git push origin master
      id: push_master

    - name: Notify user of conflict
      if: steps.merge_hf_to_minor.outputs.CONFLICT == 'true' || steps.merge_minor_to_master.outputs.CONFLICT == 'true'
      run: |
        # Get the user who caused the conflict
        COMMIT_USER=$(git log -1 --pretty=format:'%ae' -n 1)
        echo "Conflict detected. Temporary branch created: $TEMP_BRANCH"
        gh issue create --title "Conflict detected in branch merge" \
                        --body "A conflict was detected in the merge process. Please resolve the conflict on the temporary branch: $TEMP_BRANCH." \
                        --assignee "$COMMIT_USER"
        exit 1
      env:
        GH_TOKEN: ${{ secrets.JEGANTOKEN }}
